description: |
  Lint and test and apply Terraform configuration.
  https://github.com/suzuki-shunsuke/example-circleci-orb-tfenv/pull/1
usage:
  version: 2.1
  orbs:
    tfenv: suzuki-shunsuke/tfenv@0.3.0
    terraform: suzuki-shunsuke/terraform@0.1.0
  workflows:
    build:
      jobs:
        - tfenv/setup:
            name: setup
            custom_setup:
              - run:
                  name: Install terraform
                  command: |
                    export PATH=$PWD/.tfenv/bin:$PATH
                    tfenv install
  
        - tfenv/test:
            name: test foo/staging
            requires:
              - setup
            dir: services/foo/staging
            tfnotify_config_path: .tfnotify.yaml
            custom_tests:
              - tflint:
                  dir: services/foo/staging
  
        - tfenv/test:
            name: test foo/production
            requires:
              - setup
            dir: services/foo/production
            tfnotify_config_path: .tfnotify.yaml
            custom_tests:
              - tflint:
                  dir: services/foo/production
  
        - tfenv/test:
            name: test bar/staging
            requires:
              - setup
            dir: services/bar/staging
            tfnotify_config_path: .tfnotify.yaml
            custom_tests:
              - tflint:
                  dir: services/bar/staging
  
        - tfenv/test:
            name: test bar/production
            requires:
              - setup
            dir: services/bar/production
            tfnotify_config_path: .tfnotify.yaml
            custom_tests:
              - tflint:
                  dir: services/bar/production
  
        - terraform/check_changed:
            name: Check changed states
            requires:
              - setup
              - test foo/staging
              - test foo/production
              - test bar/staging
              - test bar/production
  
        - tfenv/apply:
            name: apply
            requires:
              - setup
              - test foo/staging
              - test foo/production
              - test bar/staging
              - test bar/production
            filters:
              branches:
                only:
                  - master
  
  # Custom test with tflint
  commands:
    install_tflint:
      parameters:
        install_dir:
          type: string
          default: bin
      steps:
        - run:
            name: Install tflint
            shell: /bin/bash -eu -o pipefail
            command: |
              bin_dir=$PWD/<< parameters.install_dir >>
              mkdir -p $bin_dir
              dirpath=$(mktemp -d)
              cd $dirpath
              curl -LO https://github.com/terraform-linters/tflint/releases/download/v0.15.1/tflint_linux_amd64.zip
              unzip tflint_linux_amd64.zip
              mv tflint $bin_dir/tflint
              chmod a+x $bin_dir/tflint
              rm -R $dirpath
    tflint:
      parameters:
        dir:
          type: string
          default: "."
        install_dir:
          type: string
          default: bin
      steps:
        - install_tflint:
            install_dir: << parameters.install_dir >>
        - run:
            name: tflint
            shell: /bin/bash -eu -o pipefail
            command: |
              export PATH=$PWD/<< parameters.install_dir >>:$PATH
              cd << parameters.dir >>
              if ! tflint; then
                echo_error "tflint is failure"
                github-comment -template ":x: [Job Link]($CIRCLE_BUILD_URL) [<< parameters.dir >>] tflint is failure"
                exit 1
              fi
